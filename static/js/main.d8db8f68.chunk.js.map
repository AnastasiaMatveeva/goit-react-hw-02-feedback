{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistic.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","btn","key","name","onClick","charAt","toUpperCase","slice","length","Statistics","good","bad","neutral","totalFeedback","positivePercentage","statistic__box","Section","title","children","section__box","Notification","message","notification__box","App","state","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","positive","totalFeedbacks","Math","floor","event","btnType","target","getAttribute","setState","prevState","keys","this","feedbackValues","some","value","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,eAAiB,oC,gBCAnCD,EAAOC,QAAU,CAAC,aAAe,gC,gBCAjCD,EAAOC,QAAU,CAAC,kBAAoB,0C,uLCwBvBC,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,4BACEC,UAAWC,IAAEC,IACbC,IAAKJ,EACLK,KAAML,EACNM,QAASR,GAERE,EAAOO,OAAO,GAAGC,cACjBR,EAAOS,MAAM,EAAGT,EAAOU,c,gBCOnBC,EAlBI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,cACAC,EACI,EADJA,mBAEA,OACE,yBAAKf,UAAWC,IAAEe,gBAChB,oCAAUL,GACV,uCAAaE,GACb,mCAASD,GACT,qCAAWE,GACX,iDAAuBC,EAAvB,Q,gBCJSE,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,yBAAKnB,UAAWC,IAAEmB,cAChB,4BAAKF,GACJC,I,gBCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,yBAAKtB,UAAWC,IAAEsB,mBAChB,4BAAKD,KC4DIE,E,4MA5DbC,MAAQ,CACNd,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGPc,mBAAqB,WAGnB,OAFsBC,OAAOC,OAAO,EAAKH,OAEpBI,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,I,EAEzDC,gCAAkC,WAChC,IAAMC,EAAW,EAAKR,MAAMd,KACtBuB,EAAiB,EAAKR,qBAC5B,OAAOS,KAAKC,MAAOH,EAAWC,EAAkB,M,EAElDrC,gBAAkB,SAAAwC,GAAU,IAEpBC,EADaD,EAAXE,OACeC,aAAa,QAFX,WAIhBrC,GACHmC,IAAYnC,GACd,EAAKsC,UAAS,SAAAC,GACZ,OAAO,eACJvC,EAAMuC,EAAUvC,GAAO,OAJhC,IAAK,IAAIA,KAAO,EAAKsB,MAAQ,EAApBtB,I,uDAWT,IAAMP,EAAU+B,OAAOgB,KAAKC,KAAKnB,OAC3BoB,EAAiBlB,OAAOC,OAAOgB,KAAKnB,OAFnC,EAGwBmB,KAAKnB,MAA5Bd,EAHD,EAGCA,KAAME,EAHP,EAGOA,QAASD,EAHhB,EAGgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CAASM,MAAM,yBACb,kBAAC,EAAD,CACEtB,QAASA,EACTC,gBAAiB+C,KAAK/C,mBAGzBgD,EAAeC,MAAK,SAAAC,GAAK,OAAIA,EAAQ,KACpC,kBAAC,EAAD,CAAS7B,MAAM,aACb,kBAAC,EAAD,CACEP,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLG,mBAAoB6B,KAAKZ,kCACzBlB,cAAe8B,KAAKlB,wBAIxB,kBAAC,EAAD,CAAcJ,QAAQ,2B,GAtDd0B,a,YCAlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d8db8f68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__21IOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic__box\":\"Statistic_statistic__box__1XvGp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__box\":\"Section_section__box__3ESMk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification__box\":\"Notification_notification__box__1ZpxX\"};","import React from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          className={s.btn}\r\n          key={option}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option.charAt(0).toUpperCase()}\r\n          {option.slice(1, option.length)}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport s from './Statistic.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  bad,\r\n  neutral,\r\n  totalFeedback,\r\n  positivePercentage,\r\n}) => {\r\n  return (\r\n    <div className={s.statistic__box}>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {totalFeedback}</p>\r\n      <p>Positive Feedback: {positivePercentage} %</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  totalFeedback: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={s.section__box}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import React from 'react';\r\nimport s from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div className={s.notification__box}>\r\n      <h4>{message}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = { message: PropTypes.string };\r\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const userFeedbacks = Object.values(this.state);\n\n    return userFeedbacks.reduce((acc, item) => acc + item, 0);\n  };\n  countPositiveFeedbackPercentage = () => {\n    const positive = this.state.good;\n    const totalFeedbacks = this.countTotalFeedback();\n    return Math.floor((positive / totalFeedbacks) * 100);\n  };\n  onLeaveFeedback = event => {\n    const { target } = event;\n    const btnType = target.getAttribute('name');\n\n    for (let key in this.state) {\n      if (btnType === key) {\n        this.setState(prevState => {\n          return {\n            [key]: prevState[key] + 1,\n          };\n        });\n      }\n    }\n  };\n  render() {\n    const options = Object.keys(this.state);\n    const feedbackValues = Object.values(this.state);\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        {feedbackValues.some(value => value > 0) ? (\n          <Section title=\"Statistic\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n              totalFeedback={this.countTotalFeedback()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}